{"version":3,"sources":["images/spora_logo.jpg","images/nature.mp4","images/lion.jpg","components/Navbar/Navbar.js","components/Lander/Lander.js","components/Socials/Socials.js","components/About/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","_ref","setAboutMessage","react_default","a","createElement","className","src","sporaLogo","alt","onClick","Lander","react_media","query","matches","lion","autoPlay","muted","loop","nature","type","Socials","href","target","rel","index_es","icon","faInstagram","faTwitter","faEnvelope","About","showAboutMessage","renderprops","items","from","height","enter","leave","props","div","style","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","newState","state","setState","components_Navbar_Navbar","components_About_About","components_Lander_Lander","components_Socials_Socials","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a9be4ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spora_logo.f81c4fa3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nature.58b0e6f7.mp4\";","module.exports = __webpack_public_path__ + \"static/media/lion.6a5a20a6.jpg\";","import React from 'react';\r\nimport sporaLogo from '../../images/spora_logo.jpg';\r\nimport './Navbar.css';\r\n\r\nconst Navbar =  ({setAboutMessage}) => {\r\n return (\r\n    <div className='navFlex'>\r\n        <img src={sporaLogo} alt='logo' />\r\n        <button onClick={setAboutMessage} className='navButton'>About</button>\r\n    </div>\r\n \r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Media from 'react-media';\r\nimport './Lander.css';\r\nimport nature from '../../images/nature.mp4';\r\nimport lion from '../../images/lion.jpg';\r\n\r\n\r\n\r\nconst Lander =  () => {\r\n return (\r\n    <div className='videoBox' >\r\n        <Media query= '(max-width: 499px'>\r\n            {matches =>\r\n                matches ? (\r\n                    <img src={lion} alt='LION' className='lion' />\r\n                ) : (\r\n                <video className='bgVideo' autoPlay muted loop>\r\n                    <source src={nature} type='video/mp4' />\r\n                </video>)}\r\n        </Media>\r\n        <div className='messageBox'>\r\n            <h1>SPORA</h1>\r\n            <hr />\r\n            <h2>The Only African Language Learning Community</h2>\r\n        </div>\r\n    </div>\r\n \r\n    );\r\n}\r\n\r\nexport default Lander;","import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faInstagram, faTwitter} from '@fortawesome/free-brands-svg-icons';\r\nimport {faEnvelope} from '@fortawesome/free-solid-svg-icons';\r\nimport './Socials.css'\r\n\r\nconst Socials =  () => {\r\n return (\r\n    <footer  >\r\n        <div className='socialFlex' >\r\n            <a href='https://www.instagram.com/' target=\"_blank\" rel='noopener noreferrer'><FontAwesomeIcon icon={faInstagram} /></a>\r\n            <a href='https://twitter.com/' target=\"_blank\" rel='noopener noreferrer'><FontAwesomeIcon icon={faTwitter} /></a>\r\n            <a href='mailto:someone@example.com?Subject=Hello%20again'> <FontAwesomeIcon icon={faEnvelope} /></a>\r\n        </div>\r\n    </footer>\r\n \r\n    );\r\n}\r\n\r\nexport default Socials;","import React from 'react';\r\nimport {Transition, animated} from 'react-spring/renderprops';\r\nimport './About.css';\r\n\r\nconst About = ({showAboutMessage}) => {\r\n    return (\r\n        <Transition\r\n            items={showAboutMessage} \r\n            from={{height: 0}}\r\n            enter={{height: 'auto'}}\r\n            leave={{height: 0}}>\r\n            {showAboutMessage => showAboutMessage && (props => \r\n                    <animated.div  className='containerT' style={props}>\r\n                        <h3>Lorem ipsum</h3>\r\n                        <p  className='aboutP'>\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent lacinia sem sit amet neque auctor bibendum. Etiam non ligula tristique, consequat mauris vitae, consequat diam. Donec faucibus nisl ante, nec ullamcorper enim tincidunt vel. Pellentesque sit amet pharetra justo. Morbi at ligula ullamcorper dui luctus dapibus. Quisque ornare ex vel massa fermentum, eu suscipit lorem mollis. In mollis nulla nulla, nec tempor ipsum convallis quis. Sed lobortis lacus lacinia, rutrum ligula vel, tempus nulla.\r\n                            Etiam dui nulla, sagittis nec tellus nec, gravida ultrices risus. Vivamus ut tincidunt dui. Vestibulum placerat feugiat pharetra. Phasellus volutpat scelerisque purus, eget consectetur enim pellentesque a. Nunc non orci dolor. Quisque id egestas dolor. In ut eros nec mauris fringilla blandit. Pellentesque ac scelerisque velit. Vestibulum orci metus, pretium vel vulputate in, malesuada quis orci. Donec diam sapien, fringilla in quam in, vulputate porttitor metus. Morbi posuere orci ac lacus blandit, consectetur sagittis velit mattis. Donec vel risus quis mauris auctor convallis. Nam quam metus, ultrices vitae feugiat id, consequat id est. Phasellus congue sodales magna bibendum hendrerit. Quisque lacus sapien, tempor sed efficitur sed, vehicula condimentum massa.\r\n                        </p>\r\n                    </animated.div>\r\n                    )}\r\n        </Transition>\r\n     \r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport './components/Navbar/Navbar';\nimport Navbar from './components/Navbar/Navbar';\nimport Lander from './components/Lander/Lander';\nimport Socials from './components/Socials/Socials';\nimport About from './components/About/About';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      showAboutMessage: false\n      \n    }\n  }\n\n  setAboutMessage = () => {\n    const newState = !(this.state.showAboutMessage);\n    this.setState({showAboutMessage:newState});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar setAboutMessage={this.setAboutMessage} />\n        <About showAboutMessage={this.state.showAboutMessage} />\n        <Lander />\n        <Socials />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}